spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:29092}
          auto-add-partitions: true
          auto-create-topics: true
      bindings:
        order-out-0:
          destination: com.github.dericksm.orderservice.order
          producer:
            partition-key-expression: headers['partitionKey']
            partition-count: 2
        releaseStock-out-0:
          destination: com.github.dericksm.orderservice.release-stock
          producer:
            partition-key-expression: headers['partitionKey']
            partition-count: 2
        stockReserveRejected-in-0:
          destination: com.github.dericksm.productservice.reserveRejected
          group: orderServiceGroup
          consumer:
            max-attempts: 4
            back-off-initial-interval: 10000
        stockReserveConfirmed-in-0:
          destination: com.github.dericksm.productservice.reserveConfirmed
          group: orderServiceGroup
          consumer:
            max-attempts: 4
            back-off-initial-interval: 10000
        paymentRejected-in-0:
          destination: com.github.dericksm.paymentService.paymentRejected
          group: orderServiceGroup
          consumer:
            max-attempts: 4
            back-off-initial-interval: 10000
        paymentConfirmed-in-0:
          destination: com.github.dericksm.paymentService.payment-confirmed
          group: orderServiceGroup
          consumer:
            max-attempts: 4
            back-off-initial-interval: 10000
    schema-registry-client:
      endpoint: http://${SCHEMA_REGISTRY_HOST:localhost}:${SCHEMA_REGISTRY_PORT:8081}
    function:
      definition: stockReserveConfirmed;stockReserveRejected;paymentRejected;paymentConfirmed
  main:
    allow-bean-definition-overriding: true
  data:
    mongodb:
      uri: 
      database: storedatabase
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
